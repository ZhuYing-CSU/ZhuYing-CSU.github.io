{"meta":{"title":"晓风昼影","subtitle":"","description":"记录日常笔记及思考","author":"一抹竹影","url":"http://example.com","root":"/"},"pages":[{"title":"文章归档","date":"2022-06-09T13:03:38.505Z","updated":"2022-06-09T13:03:38.505Z","comments":true,"path":"archive.html","permalink":"http://example.com/archive.html","excerpt":"","text":""}],"posts":[{"title":"Pytorch在Android端中的应用流程","slug":"Pytorch在Android端中的应用流程","date":"2022-06-09T07:53:00.000Z","updated":"2022-06-09T13:20:47.979Z","comments":true,"path":"2022/06/09/Pytorch在Android端中的应用流程/","link":"","permalink":"http://example.com/2022/06/09/Pytorch%E5%9C%A8Android%E7%AB%AF%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E6%B5%81%E7%A8%8B/","excerpt":"","text":"模型预处理 在神经网络模型训练好后，需要使用jit中的script函数将模型转为Torchscript语言，然后再用optimize_for_mobile函数对其进行优化，最后再使用_save_for_lite_interpreter函数保存为可用于pytorch-lite的神经网络模型文件，代码如下： import torchfrom torch.utils.mobile_optimizer import optimize_for_mobilemodel.eval() # assume model had loaded or trained# convert python to torchscriptscripted_model = torch.jit.script(model)optimized_scripted_model = optimize_for_mobile(scripted_model)optimized_scripted_model._save_for_lite_interpreter(\"your_file.tpl\") Android Project build.gradle 设置 在dependencies一项中加入下列内容 // Pytorch-lite framework (ver: 1.9.0)implementation 'org.pytorch:pytorch_android_lite:1.9.0'implementation 'org.pytorch:pytorch_android_torchvision:1.9.0' 模型使用 读取模型 Module yourModel = LiteModuleLoader.load(modelFilePath); 读取图片 如果没有特别的需要的话，直接用Bitmap去读取图像文件即可。 Bitmap img = BitmapFactory.decodeFile(imgFilePath); 模型使用 Tensor input = TensorImageUtils.bitmapToFloat32Tensor( originalImg, TensorImageUtils.TORCHVISION_NORM_MEAN_RGB, TensorImageUtils.TORCHVISION_NORM_STD_RGB);Tensor output = nnModel.forward(IValue.from(input)).toTensor(); 上述代码中，将Bitmap类型转换为Tensor类型时做了normalization的预处理，但可以不做。 模型输出转换为图片 由于模型的输出类型为Tensor，若需要使用opencv的Mat类型的话，需要依次转换格式为FloatArray，FloatBuffer，ByteBuffer，最后到Mat，相关代码如下所示。 private static ByteBuffer FloatBuffer2ByteBuffer(FloatBuffer originBuffer){ ByteBuffer ret = ByteBuffer.allocateDirect(originBuffer.remaining() * 64); ret.order(ByteOrder.nativeOrder()); originBuffer.mark(); ret.asFloatBuffer().put(originBuffer); originBuffer.reset(); ret.rewind(); return ret;}private static Mat byteArray2Mat(ByteBuffer byteBuffer, int width, int height){ return new Mat(width, height, CvType.CV_64FC3, byteBuffer);}private static Mat Tensor2Mat(Tensor input){ return byteArray2Mat( FloatBuffer2ByteBuffer(FloatBuffer.wrap(input.getDataAsFloatArray())), (int) input.shape()[2], (int) input.shape()[3] );} something 𝕚 something 𝕚","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://example.com/tags/Android/"},{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"},{"name":"Pytorch","slug":"Pytorch","permalink":"http://example.com/tags/Pytorch/"},{"name":"Deep Learning","slug":"Deep-Learning","permalink":"http://example.com/tags/Deep-Learning/"}]},{"title":"Makefile Helper","slug":"Makefile-Helper","date":"2022-06-08T15:52:07.000Z","updated":"2022-06-09T13:17:47.599Z","comments":true,"path":"2022/06/09/Makefile-Helper/","link":"","permalink":"http://example.com/2022/06/09/Makefile-Helper/","excerpt":"","text":".PHONY: test helptarget_name: ## it is the description @echo &quot;do nothing&quot; help: @grep -E &#x27;^[a-zA-Z_-]+:.*?## .*$$&#x27; $(MAKEFILE_LIST) | sort | awk &#x27;BEGIN &#123;FS = &quot;:.*?## &quot;&#125;; &#123;printf &quot;\\033[36m%-30s\\033[0m %s\\n&quot;, $$1, $$2&#125;&#x27;","categories":[],"tags":[{"name":"make","slug":"make","permalink":"http://example.com/tags/make/"},{"name":"Makefile","slug":"Makefile","permalink":"http://example.com/tags/Makefile/"}]}],"categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://example.com/tags/Android/"},{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"},{"name":"Pytorch","slug":"Pytorch","permalink":"http://example.com/tags/Pytorch/"},{"name":"Deep Learning","slug":"Deep-Learning","permalink":"http://example.com/tags/Deep-Learning/"},{"name":"make","slug":"make","permalink":"http://example.com/tags/make/"},{"name":"Makefile","slug":"Makefile","permalink":"http://example.com/tags/Makefile/"}]}