{"meta":{"title":"晓风昼影","subtitle":"","description":"记录日常笔记及思考","author":"一抹竹影","url":"https://zhuying-csu.github.io","root":"/"},"pages":[{"title":"文章归档","date":"2022-06-09T13:03:38.505Z","updated":"2022-06-09T13:03:38.505Z","comments":true,"path":"archive.html","permalink":"https://zhuying-csu.github.io/archive.html","excerpt":"","text":""}],"posts":[{"title":"一周总结(一)","slug":"一周总结-一","date":"2022-06-12T06:34:44.000Z","updated":"2022-06-12T07:37:27.519Z","comments":true,"path":"2022/06/12/一周总结-一/","link":"","permalink":"https://zhuying-csu.github.io/2022/06/12/%E4%B8%80%E5%91%A8%E6%80%BB%E7%BB%93-%E4%B8%80/","excerpt":"","text":"阅读情况 本周未阅读完任何一本书 锻炼情况 长跑跑了四次，除开第二次因是第一次夜间长跑后第二天早上导致时间很短，其他几次长跑时间都在15分钟以上，周日的第四次跑步平均速度为7分钟/公里左右，有很长一段时间的步速为7分钟/公里以内，比最开始已经有了很多进步，但目前膝盖疼和岔气导致跑步时间难以突破25分钟，距离难以突破3公里，仍须继续锻炼，目前尚未形成长跑的习惯。 周日HN推送了NerdFitness的HandStand教学，共分为5个level，目前已能勉强完成第3个level，还需要继续锻炼手部力量和核心力量。 Keep训练中仅周四漏了一项，总体进度还是很好的，也能够明显地感觉到进步。但下周为最后一周训练了，且所用的Keep也即将停止运营，也许接下来会跟寻这NerdFitness去锻炼？ 考研情况 目前在跟The OS: TEP学习，但由于该课程在考研初试中仅是存在概率考，与其他几项如数学一、数据结构的重要性不相而语，仅作为英语的学习材料，但由于时间较为紧张，故下周开始需要针对性地学习数学与英语，其中数学的优先级要远高于其他课程。 其他情况 这几天唐山伤人事件闹得沸沸扬扬，也有大片的女性因共情而集体发声、呼吁社会对女性多加关爱，对于这件事情无可非议，虽然目前社会秩序已相较几十年前有着巨大进步，但也仍然存在着部分不法分子目中无法，加之男女身体本身存在的差异也使得这件事也难以忽略。 可是呢，也存在着部分无知者及恶意者，逾越了不应跨越的线，肆意挑起男女斗争，甚至还像疯狗一样咬向了我们这些不发声的人。说实话，你为女性发声了，无可厚非，说明你站在关心女性、关爱女性的那一边，也有人发声是为了贬低女性等等，但从逻辑上看，无论站那边，或者都不站，难道一定就要以发声的形式吗？难道我不发声，我就一定就是你所说的黑暗面吗？ 而且这件事情，无论是男女为受害者，其实本质都是一样的，流氓地痞欺负弱势群体，分析需要从多个角度考虑，光抓着受害者为女性这点狂喷，又有什么意思呢？互联网就这样，你想骂的人又看不到，即使看到了也不会到心里去，反倒是我们这些无辜人，看了反而难受。 如果要仔细分析的话，得从下面的角度去思考： 流氓地痞为何会出现? 没有人是天生的犯罪者，在严厉的法律面前，只要有思考能力，就明白违法的代价是怎样的，自然就不会去违法犯罪。那么问题来了，如果我所说的以上假设成立，就势必存在着能够滋生犯罪的土壤，或是法律不完全，或是被隐藏在市井之下，或是执法不严。例如中国此前为何百姓不敢在外就餐，就是怕的地沟油，为什么地沟油会大量用于地摊商铺中呢？就是因为违法所带来的成本远远小于违法带来的收益，对地沟油的检查相对宽松或者说频次少，哪怕是目前，也存在着大量商铺存在着大量不卫生的生产流程。 因此说，引起这件事的原因必须严查及解决，不然我们谁也不敢保证下一个受害者是不是自己，这与受害者是否为女性无关。 周边人群为何不帮忙？ 目前法律不鼓励主动帮助，一旦上去帮忙，即使你知道前因后果，最后对你的处理也并非仅凭你一言而定，法官、流氓及受害者的言论都能决定你的下场，谁能保证你不会被反咬一口？更何况当时场景下，大多数人都只是在默默地吃饭，或者玩手机，又有多少人知道前因后果呢？那更加不敢上去劝和或帮助任何一方了。 目前生活不允许失败，怎么理解呢？你当前的工作，可能是千辛万苦拼搏而来的，一旦你因为受伤进医院、或者被打了官司，甚至被标了一个人人喊打的标签，那么你的老板就有可能因此将你辞退，而工作对你的重要性如何呢？拼命工作是为了什么，是为了家庭、为了孩子、为了房子、为了买车、为了健康...这类有很多，背负的越多，那么越不能失去这份工作，因此就越难以挺身而出。 仅仅基于以上两种角度的考虑，就已足够使身旁众人退缩了，能明哲保身就最好，打电话报警就已是情分了，这同样也无论男女。 受害者为何不远离？ 我不否认用酒瓶砸流氓的行为是没有问题的，因为人之常情嘛，当你觉得你有着足够的力量，而对方又冒犯了你，那么为了用行动喝退对方，阻止对方的进一步冒犯，基于这种考虑，这种行为的产生也是较为合理的。但对于很多人来说，遇到这种情况一般能避免冲突就避免冲突，不能避免就想办法逃离，不是说你这边人多就可以浪了，这件事就很好地说明了不要被事物的表面现象所蒙蔽，看着就一两个人，但谁知道对方的人实际有多少呢？ 因此，对于受害者的情况我仅将其归因为社会经验不足，不是说如果受害者是你老婆、老妈就巴拉巴拉，受害者是男性也同样如此，男性突然间就用酒瓶把别人爆头了，对面必然会狠狠报复你，如此同样无关性别。 事情起因 流氓的骚扰，我承认与女性相关，而这也是广大发声女性所抨击的一点，关于这个角度还是那个观点，不要逾越了不该跨过的线，否则只会招来无关人员的指责谩骂。 上层因素 这个角度比较特殊，可能涉及国内国外，也比较复杂。 从国家层面想，所需要担心的是内忧外患，而所谓内忧，就目前而言，主要是阶级矛盾引发的斗争，如果阶级矛盾较为严重，那么分化底层民众（如贴标签划分人群）甚至引发底层民众的内斗（如激化不同标签人群间的矛盾），就能一定程度上缓解阶级矛盾，从而有利于国家稳定。而目前来说，这是否是中国经济发展缓下来，经济开始下行所造成的影响的一种解决措施呢？还有待观察。 从国外来说，如果想以最低代价击垮一个国家的话，最好的办法就是让其从内部崩溃，而中国的国家上层终究得是底层人民，因此将中国底层民众进行分化并不断激化矛盾，就可能会逐渐渗透至上层，进而导致中国产生更大的分裂，这是否也是一种手段？","categories":[],"tags":[{"name":"周总结","slug":"周总结","permalink":"https://zhuying-csu.github.io/tags/%E5%91%A8%E6%80%BB%E7%BB%93/"},{"name":"总结","slug":"总结","permalink":"https://zhuying-csu.github.io/tags/%E6%80%BB%E7%BB%93/"}]},{"title":"Pytorch在Android端中的应用流程","slug":"Pytorch在Android端中的应用流程","date":"2022-06-09T06:53:00.000Z","updated":"2022-06-09T15:54:35.444Z","comments":true,"path":"2022/06/09/Pytorch在Android端中的应用流程/","link":"","permalink":"https://zhuying-csu.github.io/2022/06/09/Pytorch%E5%9C%A8Android%E7%AB%AF%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E6%B5%81%E7%A8%8B/","excerpt":"","text":"模型预处理 在神经网络模型训练好后，需要使用jit中的script函数将模型转为Torchscript语言，然后再用optimize_for_mobile函数对其进行优化，最后再使用_save_for_lite_interpreter函数保存为可用于pytorch-lite的神经网络模型文件，代码如下： import torch from torch.utils.mobile_optimizer import optimize_for_mobile model.eval() # assume model had loaded or trained # convert python to torchscript scripted_model = torch.jit.script(model) optimized_scripted_model = optimize_for_mobile(scripted_model) optimized_scripted_model._save_for_lite_interpreter(\"your_file.tpl\") Android Project build.gradle 设置 在dependencies一项中加入下列内容 // Pytorch-lite framework (ver: 1.9.0) implementation 'org.pytorch:pytorch_android_lite:1.9.0' implementation 'org.pytorch:pytorch_android_torchvision:1.9.0' 模型使用 读取模型 Module yourModel = LiteModuleLoader.load(modelFilePath); 读取图片 如果没有特别的需要的话，直接用Bitmap去读取图像文件即可。 Bitmap img = BitmapFactory.decodeFile(imgFilePath); 模型使用 Tensor input = TensorImageUtils.bitmapToFloat32Tensor( originalImg, TensorImageUtils.TORCHVISION_NORM_MEAN_RGB, TensorImageUtils.TORCHVISION_NORM_STD_RGB ); Tensor output = nnModel.forward(IValue.from(input)).toTensor(); 上述代码中，将Bitmap类型转换为Tensor类型时做了normalization的预处理，但可以不做。 模型输出转换为图片 由于模型的输出类型为Tensor，若需要使用opencv的Mat类型的话，需要依次转换格式为FloatArray，FloatBuffer，ByteBuffer，最后到Mat，相关代码如下所示。 private static ByteBuffer FloatBuffer2ByteBuffer(FloatBuffer originBuffer) { ByteBuffer ret = ByteBuffer.allocateDirect(originBuffer.remaining() * 64); ret.order(ByteOrder.nativeOrder()); originBuffer.mark(); ret.asFloatBuffer().put(originBuffer); originBuffer.reset(); ret.rewind(); return ret; } private static Mat byteArray2Mat(ByteBuffer byteBuffer, int width, int height) { return new Mat(width, height, CvType.CV_64FC3, byteBuffer); } private static Mat Tensor2Mat(Tensor input) { return byteArray2Mat( FloatBuffer2ByteBuffer(FloatBuffer.wrap(input.getDataAsFloatArray())), (int) input.shape()[2], (int) input.shape()[3] ); }","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"https://zhuying-csu.github.io/tags/Android/"},{"name":"Java","slug":"Java","permalink":"https://zhuying-csu.github.io/tags/Java/"},{"name":"Pytorch","slug":"Pytorch","permalink":"https://zhuying-csu.github.io/tags/Pytorch/"},{"name":"Deep Learning","slug":"Deep-Learning","permalink":"https://zhuying-csu.github.io/tags/Deep-Learning/"}]},{"title":"Makefile Helper","slug":"Makefile-Helper","date":"2022-06-08T14:52:07.000Z","updated":"2022-06-09T13:17:47.599Z","comments":true,"path":"2022/06/08/Makefile-Helper/","link":"","permalink":"https://zhuying-csu.github.io/2022/06/08/Makefile-Helper/","excerpt":"","text":".PHONY: test help target_name: ## it is the description @echo \"do nothing\" help: @grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN &#123;FS = \":.*?## \"&#125;; &#123;printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2&#125;'","categories":[],"tags":[{"name":"make","slug":"make","permalink":"https://zhuying-csu.github.io/tags/make/"},{"name":"Makefile","slug":"Makefile","permalink":"https://zhuying-csu.github.io/tags/Makefile/"}]}],"categories":[],"tags":[{"name":"周总结","slug":"周总结","permalink":"https://zhuying-csu.github.io/tags/%E5%91%A8%E6%80%BB%E7%BB%93/"},{"name":"总结","slug":"总结","permalink":"https://zhuying-csu.github.io/tags/%E6%80%BB%E7%BB%93/"},{"name":"Android","slug":"Android","permalink":"https://zhuying-csu.github.io/tags/Android/"},{"name":"Java","slug":"Java","permalink":"https://zhuying-csu.github.io/tags/Java/"},{"name":"Pytorch","slug":"Pytorch","permalink":"https://zhuying-csu.github.io/tags/Pytorch/"},{"name":"Deep Learning","slug":"Deep-Learning","permalink":"https://zhuying-csu.github.io/tags/Deep-Learning/"},{"name":"make","slug":"make","permalink":"https://zhuying-csu.github.io/tags/make/"},{"name":"Makefile","slug":"Makefile","permalink":"https://zhuying-csu.github.io/tags/Makefile/"}]}